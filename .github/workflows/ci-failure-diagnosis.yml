name: TensorZero CI Diagnosis Bot

on:
  workflow_run:
    workflows: ["Run Pytest"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  gather-diff-and-generate-patch:
    # TODO: only do this against main branch
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    name: Gather failure context and generate PR
    env:
      DIAGNOSTICS_DIR: diagnostics
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Gather PR metadata
        id: pr-info
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            const pr = run.pull_requests[0];

            if (!pr) {
              core.setFailed('No pull request found for the failing workflow run.');
              return;
            }

            core.setOutput('pr-number', pr.number);
            core.setOutput('base-ref', pr.base.ref);
            core.setOutput('head-ref', pr.head.ref);
            core.setOutput('head-sha', run.head_sha);
            core.setOutput('run-id', run.id);
            core.setOutput('run-attempt', run.run_attempt);
      
      - name: Prepare diagnostics workspace
        run: |
          mkdir -p "${DIAGNOSTICS_DIR}"

      - name: Fetch base branch for diff
        run: |
          git fetch origin "${{ steps.pr-info.outputs.base-ref }}"

      - name: Capture PR diff summary
        run: |
          git diff --stat "origin/${{ steps.pr-info.outputs.base-ref }}...${{ steps.pr-info.outputs.head-sha }}" > "${DIAGNOSTICS_DIR}/diff-summary.txt"
          export DIFF_SUMMARY_PATH="${DIAGNOSTICS_DIR}/diff-summary.txt"

      - name: Capture full PR diff
        run: |
          git diff "origin/${{ steps.pr-info.outputs.base-ref }}...${{ steps.pr-info.outputs.head-sha }}" > "${DIAGNOSTICS_DIR}/pr.diff"
          export FULL_DIFF_PATH="${DIAGNOSTICS_DIR}/pr.diff"

      - name: Collect artifacts from the failed workflow run
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          mkdir -p "${DIAGNOSTICS_DIR}"/failure-logs
          cd "${DIAGNOSTICS_DIR}"/failure-logs
          gh run download ${{ steps.pr-info.outputs.run-id }}
          cd ../..

          # print the contents of the logs directory
          ls -la "${DIAGNOSTICS_DIR}/failure-logs"

      - name: Write TensorZero metrics configuration
        run: |
          echo "[functions.tensorzero_github_ci_bot]" > tensorzero.toml
          echo "type = \"chat\"" >> tensorzero.toml
          echo "" >> tensorzero.toml
          echo "[functions.tensorzero_github_ci_bot.variants.gpt_5]" >> tensorzero.toml
          echo "type = \"chat_completion\"" >> tensorzero.toml
          echo "model = \"openai::gpt-5\"" >> tensorzero.toml
          echo "" >> tensorzero.toml
          echo "[metrics.tensorzero_github_ci_bot_pr_merged]" >> tensorzero.toml
          echo "type = \"float\"" >> tensorzero.toml
          echo "optimize = \"max\"" >> tensorzero.toml
          echo "level = \"inference\"" >> tensorzero.toml

      - name: Start TensorZero gateway
        run: |
          docker pull tensorzero/gateway:latest
          docker run -d --rm \
            --name tensorzero-gateway \
            -e TENSORZERO_CLICKHOUSE_URL=${{ secrets.CLICKHOUSE_URL }} \
            -e OPENAI_API_KEY=${{ secrets.OPENAIAPIKEY }} \
            -p 3000:3000 \
            --volume ./:/app \
            tensorzero/gateway:latest --config-file /app/tensorzero.toml

          for i in {1..20}; do
            curl -fsS http://localhost:3000/health && exit 0
            sleep 3
          done
          echo "Gateway never became ready" >&2
          exit 1

      - name: Call LLM to generate PR revision
        uses: shuyangli/t0-typescript-action/generate-pr-patch@main
        with:
          token: ${{ github.token }}
          openai-api-key: ${{ secrets.OPENAIAPIKEY }}
          tensorzero-base-url: http://localhost:3000
          diff-summary-path: diagnostics/diff-summary.txt
          full-diff-path: diagnostics/pr.diff
          input-logs-dir: diagnostics/failure-logs
          output-artifacts-dir: debug-logs
          clickhouse-url: ${{ secrets.CLICKHOUSE_URL }}
          clickhouse-table: GitHubBotPullRequestToInferenceMap

      - name: Upload diagnostics bundle
        if: always()
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: ci-failure-diagnostics
          path: |
            diagnostics/
            debug-logs/

      - name: Stop TensorZero gateway
        if: always()
        run: docker stop tensorzero-gateway
        continue-on-error: true
